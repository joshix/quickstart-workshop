apiVersion: console.openshift.io/v1
kind: ConsoleQuickStart
metadata:
  name: summit-connect-hackathon-service-binding
spec:
  conclusion: 'The PetClinic application is automatically connected to its PostgreSQL database backend'
  description: Learn how the Service Binding Operator manages connections between your app and foundation services like databases
  displayName: 'Summit Connect Hackathon - Service Binding'
  durationMinutes: 15
  introduction: "Every frontend needs a backend. OpenShift can manage the backend, in this case a database, as well as automatically connecting frontends to it."
  tags:
  - Crunchy
  - PostgreSQL
  - Operators
  - Service Binding
  tasks:
    - title: Install PostgreSQL database cluster Operator
      description: >-
        Follow these steps to install the Crunchy PostgreSQL cluster Operator

        1. Use the [perspective switcher]{{highlight qs-perspective-switcher}} to select the Administrator perspective

        1. Click the [Operators]{{highlight qs-nav-operators}} item in the left-hand menu

        1. Search for "crunchy" in the Operator Hub. Select Crunchy COMMUNITY operator. Select Install button.
            Configure install with defaults (stable, all namespaces)

        1. Install Service Binding operator
            Admin perspective
            Operator Hub
            Search for "binding" to filter the catalog of available Operators
            Select the Service Binding Operator. Install. Defaults. Stable. All namespaces.
      review:
        instructions: |-
          Verify that the Crunchy Postgres Operator is installed
        failedTaskHelp: This task isnâ€™t verified yet.
    - title: Deploy a Container Image on OpenShift Container Platform
      description: >-
        With the Operators in place, command them to manage a database cluster and connect your app to it:

        1. Use the [perspective switcher]{{highlight qs-perspective-switcher}} to select the Developer perspective and ensure you are viewing the Topology for the blue-team project.

        1. Create a postgrescluster managed by the Crunchy Operator
            `oc apply -f https://raw.githubusercontent.com/redhat-scholars/quickstart-workshop/master/apps/blue/db/pgcluster-deployment.yaml -n blue-team`{{execute}}

        1. Create a deployment of the PetClinic application
            `oc apply -f https://raw.githubusercontent.com/redhat-scholars/quickstart-workshop/master/apps/blue/petclinic/petclinic-deployment.yaml -n blue-team`{{execute}}

        1. Instruct the Service Binding Operator to bind your application to the available database service by creating a binding
            `oc apply -f https://raw.githubusercontent.com/redhat-scholars/quickstart-workshop/master/apps/blue/petclinic/petclinic-pgcluster-binding.yaml -n blue-team`{{execute}}`

        1. Expose the spring-petclinic service to traffic from outside the cluster, creating a Route to the PetClinic app
            `oc expose service spring-petclinic -n blue-team`{{execute}}

        1. Visit the PetClinic application at its Route URL
            Web Console - Dev perspective -> click arrow badge on the circle icon for spring-petclinic 
            OR
            `oc get routes -n blue-team`{{execute}}

        The PetClinic veterinary application is shown in your browser window.
      review:
        instructions: |-
          Did the PetClinic application open and operate at the Route URL?

          
        failedTaskHelp: Verify that you're viewing the correct Project to find the Route badge in the web console. Wait a moment for the Pods to be created. If this fails, retry the steps.
  summary:
    success: >-
      The Crunchy Postgres Operator is shown the Installed Operators list in the Administrator perspective
    failed: Try the steps again.
